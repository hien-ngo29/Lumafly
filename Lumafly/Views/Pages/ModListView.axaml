<views:View x:TypeArguments="viewModels:ModListViewModel"
            xmlns="https://github.com/avaloniaui"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:models="clr-namespace:Lumafly.Models"
            xmlns:viewModels="clr-namespace:Lumafly.ViewModels"
            xmlns:views="clr-namespace:Lumafly.Views"
            xmlns:pages="clr-namespace:Lumafly.Views.Pages"
            xmlns:enums="clr-namespace:Lumafly.Enums"
            xmlns:utils="clr-namespace:Lumafly.Util"
            xmlns:customControls="clr-namespace:Lumafly.Views.Controls"
            xmlns:ext="clr-namespace:Lumafly.Extensions"
            xmlns:md="clr-namespace:Markdown.Avalonia;assembly=Markdown.Avalonia"
            xmlns:progRing="clr-namespace:AvaloniaProgressRing;assembly=AvaloniaProgressRing"
            mc:Ignorable="d" d:DesignWidth="600" d:DesignHeight="550"
            x:Class="Lumafly.Views.Pages.ModListView"
            x:DataType="viewModels:ModListViewModel"
            x:CompileBindings="True"
            Name="UserControl"
            KeyDown="OnKeyDown">
    <SplitView
        DisplayMode="CompactOverlay"
        OpenPaneLength="{Binding PaneWidth}"
        CompactPaneLength="35"
        PaneBackground="{DynamicResource RegionColor}"
        Background="{DynamicResource RegionColor}"
        IsPaneOpen="{Binding PaneOpen, Mode=TwoWay}"
        PanePlacement="Left">
        <!-- Sidebar -->
        <SplitView.Pane>
            <Border
                PointerEntered="OpenPane"
                PointerExited="ClosePane"
                Background="{DynamicResource BackgroundColor}"
                BorderBrush="#a9a9a9"
                BorderThickness="0 1 0 0">
                <StackPanel
                    Margin="2 0 0 4"
                    HorizontalAlignment="Stretch"
                    Orientation="Vertical"
                    VerticalAlignment="Bottom">
                    <StackPanel.Styles>
                        <Style Selector="Button">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                            <Setter Property="ToolTip.ShowDelay" Value="0" />
                            <Setter Property="Margin" Value=" 0 5 0 0" />
                        </Style>
                        <Style Selector="PathIcon">
                            <Setter Property="Height" Value="20" />
                            <Setter Property="Width" Value="20" />
                            <Setter Property="Margin" Value="2 0 20 0" />
                        </Style>
                        <Style Selector="StackPanel">
                            <Setter Property="Orientation" Value="Horizontal" />
                        </Style>
                    </StackPanel.Styles>
                    <Button
                        Command="{Binding UninstallAll}"
                        IsEnabled="{Binding CanUninstallAll}">
                        <StackPanel>
                            <PathIcon Data="{StaticResource delete_regular}" />
                            <TextBlock Text="{ext:Localize XAML_Uninstall_All}" />
                        </StackPanel>
                    </Button>
                    <Button
                        Command="{Binding ToggleAll}"
                        IsEnabled="{Binding CanToggleAll}">
                        <StackPanel ToolTip.Tip="{ext:Localize XAML_Toggle_All_Tooltip}" ToolTip.ShowDelay="0">
                            <PathIcon Data="{StaticResource toggle_right_regular}" />
                            <TextBlock Text="{ext:Localize XAML_Toggle_All}" />
                        </StackPanel>
                    </Button>
                    <Button
                        Command="{Binding UpdateUnupdated}"
                        IsEnabled="{Binding CanUpdateAll}">
                        <StackPanel>
                            <PathIcon Data="{StaticResource arrow_sync_regular}" />
                            <TextBlock Text="{ext:Localize XAML_ModsFilter_OutOfDate_Update}" />
                        </StackPanel>
                    </Button>
                    <Button
                        Command="{Binding ToggleApi}">
                        <StackPanel ToolTip.Tip="{ext:Localize ToggleAPI_Explanation}" ToolTip.ShowDelay="0">
                            <PathIcon Data="{StaticResource options_regular}" />
                            <TextBlock Text="{Binding ApiButtonText}" />
                        </StackPanel>
                    </Button>
                    <Button
                        Command="{Binding OpenSavesDirectory}">
                        <StackPanel>
                            <PathIcon Data="{StaticResource folder_zip_regular}" />
                            <TextBlock Text="{ext:Localize XAML_SavesFolder}" />
                        </StackPanel>
                    </Button>
                    <Button
                        Command="{Binding OpenModsDirectory}">
                        <StackPanel>
                            <PathIcon Data="{StaticResource folder_regular}" />
                            <TextBlock Text="{ext:Localize XAML_OpenMods}" />
                        </StackPanel>
                    </Button>
                    <Button
                        Command="{Binding OpenModlog}">
                        <StackPanel>
                            <PathIcon Data="{StaticResource book_database_regular}" />
                            <TextBlock Text="{ext:Localize XAML_Modlog}" />
                        </StackPanel>
                    </Button>
                    <Button
                        Command="{Binding ManuallyInstallMod}">
                        <StackPanel>
                            <PathIcon Data="{StaticResource arrow_download_regular}" />
                            <TextBlock Text="{ext:Localize XAML_Manual_Install}" />
                        </StackPanel>
                    </Button>
                </StackPanel>
            </Border>
        </SplitView.Pane>
    <DockPanel>
    
    <ProgressBar
        DockPanel.Dock="Bottom"

        MaxHeight="8"
        MinHeight="8"
            
        Margin="0 0 0 1"

        Name="Bar"

        IsVisible="{Binding ProgressBarVisible}"

        IsIndeterminate="{Binding ProgressBarIndeterminate}"

        Minimum="0"
        Maximum="100"
        Value="{Binding Progress}" />
    
    <Border
        BorderBrush="#a9a9a9"
        BorderThickness="0 0 0 1"
        DockPanel.Dock="Top">
        <DockPanel>
            <Menu 
                DockPanel.Dock="{Binding ModFilterDocking}" 
                HorizontalAlignment="Stretch">
                
                <Menu.Styles>
                    <Style Selector="MenuItem">
                        <Setter Property="Padding" Value="6 0" />
                    </Style>
                </Menu.Styles>

                <!-- The PointerPressed un highlights all the filter buttons except the one that's pressed
                    the name prefix "ModFilter_" helps find all buttons in code behind. The All button is 
                    highlighted by default on app open-->
                <MenuItem
                    IsEnabled="False"
                    Header="{ext:Localize XAML_FilterMods}" />

                <MenuItem
                    Name="ModFilter_All"
                    IsVisible="{Binding IsInOnlineMode}"
                    Header="{ext:Localize XAML_ModsFilter_All}"
                    Command="{Binding SelectModsWithFilter}"
                    CommandParameter="{x:Static enums:ModFilterState.All}" />

                <MenuItem
                    Name="ModFilter_Installed"
                    Header="{ext:Localize XAML_ModsFilter_Installed}"
                    Command="{Binding SelectModsWithFilter}"
                    CommandParameter="{x:Static enums:ModFilterState.Installed}" />

                <MenuItem
                    Name="ModFilter_Enabled"
                    Header="{ext:Localize XAML_ModsFilter_Enabled}"
                    Command="{Binding SelectModsWithFilter}"
                    CommandParameter="{x:Static enums:ModFilterState.Enabled}" />

                <MenuItem
                    Name="ModFilter_OutOfDate"
                    IsVisible="{Binding IsInOnlineMode}"
                    Header="{ext:Localize XAML_ModsFilter_OutOfDate}"
                    Command="{Binding SelectModsWithFilter}"
                    CommandParameter="{x:Static enums:ModFilterState.OutOfDate}" />

                <MenuItem
                    Name="ModFilter_WhatsNew"
                    IsVisible="{Binding ShouldShowWhatsNew}"
                    Header="{ext:Localize XAML_ModsFilter_WhatsNew}"
                    Command="{Binding SelectModsWithFilter}"
                    CommandParameter="{x:Static enums:ModFilterState.WhatsNew}" />
            </Menu>
            <StackPanel>
                <Border
                    BorderBrush="#a9a9a9"
                    BorderThickness="0 1 0 0">
                    <Grid
                        ColumnDefinitions="Auto Auto Auto"
                        RowDefinitions="Auto Auto"
                        IsVisible="{Binding IsInWhatsNew}">
                        <Grid.Styles>
                            <Style Selector="CheckBox, RadioButton">
                                <Setter Property="Margin" Value="10 0 0 0"/>
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                            <Style Selector="TextBlock">
                                <Setter Property="Foreground" Value="{DynamicResource DisabledColor}"/>
                                <Setter Property="Margin" Value="6 0 0 0"/>
                                <Setter Property="IsEnabled" Value="False" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </Grid.Styles>
                        <Grid.Resources>
                            <utils:HowRecentEnumToBoolConvertor x:Key="HowRecentEnumConvertor" />
                        </Grid.Resources>
                        <TextBlock
                            Grid.Column="0" Grid.Row="0"
                            Text="How Recent:"/>
                        <RadioButton
                            Grid.Column="1" Grid.Row="0"
                            IsChecked="{Binding HowRecentModChanged, 
                            Converter={StaticResource HowRecentEnumConvertor},
                            ConverterParameter={x:Static enums:HowRecentModChanged.Week}}"
                            GroupName="Recent"
                            Content="{ext:Localize XAML_LastWeek}" />
                        <RadioButton
                            Grid.Column="2" Grid.Row="0"
                            IsChecked="{Binding HowRecentModChanged, 
                            Converter={StaticResource HowRecentEnumConvertor},
                            ConverterParameter={x:Static enums:HowRecentModChanged.Month}}"
                            GroupName="Recent"
                            Content="{ext:Localize XAML_LastMonth}" />
                        <TextBlock
                            Grid.Column="0" Grid.Row="1"
                            Text="Recent Type:"/>
                        <CheckBox
                            Grid.Column="1" Grid.Row="1"
                            IsChecked="{Binding WhatsNew_NewMods}"
                            Content="{ext:Localize XAML_NewMods}" />
                        <CheckBox
                            Grid.Column="2" Grid.Row="1"
                            IsChecked="{Binding WhatsNew_UpdatedMods}"
                            Content="{ext:Localize XAML_UpdatedMods}" />
                    </Grid>
                </Border>
                <Grid
                    IsVisible="{Binding !IsInWhatsNew}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" MinWidth="400" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" MinWidth="75" />
                    </Grid.ColumnDefinitions>

                    <TextBox
                        Grid.Column="0"
                        x:Name="Search"
                        Name="Search"
                        IsVisible="{ReflectionBinding $parent[pages:ModListView].DataContext.IsNormalSearch}"
                        Watermark="{ext:Localize XAML_SearchMark}"
                        BorderThickness="0"
                        Margin="6 6"
                        Text="{Binding Search}" />

                    <AutoCompleteBox
                        Grid.Column="0"
                        IsVisible="{ReflectionBinding $parent[pages:ModListView].DataContext.IsDependencyAndIntegrationSearch}"
                        BorderThickness="0"
                        Margin="6 6"
                        SelectedItem="{Binding DependencySearchItem}"
                        ItemsSource="{Binding ModNames}" />

                    <AutoCompleteBox
                        Grid.Column="0"
                        IsVisible="{ReflectionBinding $parent[pages:ModListView].DataContext.IsIntegrationSearch}"
                        BorderThickness="0"
                        Margin="6 6"
                        SelectedItem="{Binding DependencySearchItem}"
                        ItemsSource="{Binding ModNames}" />

                    <Button
                        Grid.Column="1"
                        Background="Transparent"
                        HorizontalAlignment="Right"
                        BorderThickness="0"
                        IsVisible="{Binding ClearSearchVisible}"
                        Command="{Binding ClearSearch}"
                        Margin="0 0 0 0">
                        <PathIcon
                            Data="{StaticResource presence_offline_regular}"
                            Width="15" Height="15" />
                    </Button>

                    <customControls:TextButtonFlyout
                        FlyoutPlacement="BottomEdgeAlignedRight"
                        FlyoutShowMode="Transient"
                        Padding="6 0 0 0"
                        Margin="0 0 5 0"
                        Header="{ext:Localize XAML_Search_Options}"
                        Background="{DynamicResource RegionColor}"
                        OnHoverColor="{DynamicResource DefaultButtonColor}"
                        Grid.Column="2">

                        <pages:SearchOptionsMenu />
                        
                    </customControls:TextButtonFlyout>
                </Grid>
            </StackPanel>
        </DockPanel>
    </Border>
    
    <TextBlock
        DockPanel.Dock="Top"
        Margin="0 -25 10 0"
        VerticalAlignment="Top"
        HorizontalAlignment="Right"
        Text="{Binding NumberOfResults}"
        Foreground="{DynamicResource DisabledColor}"/>

    <ScrollViewer>
      <StackPanel>
        <Grid IsVisible="{Binding !LoadedWhatsNew}"
              ColumnDefinitions="Auto *"
              RowDefinitions="3*, *">

          <progRing:ProgressRing
              IsVisible="{Binding IsLoadingWhatsNew}"
              Grid.Row="0" Grid.Column="0"
              Grid.ColumnSpan="2"
              Width="100"
              Height="100"
              IsActive="True"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Foreground="Ivory"
              Margin="10,20,0,0"/>

          <PathIcon
              Grid.Column="0"
              Grid.Row="1"
              IsVisible="{Binding ShouldShowWhatsNewErrorIcon}"
              Margin="30,40,10,0"
              Data="{StaticResource warning_regular}"
              Height="50" Width="50"/>

          <TextBlock
              Grid.Row="1"
              Grid.Column="1"
              Margin="20,40,0,0"
              TextWrapping="Wrap"
              IsVisible="{Binding ShouldShowWhatsNewInfoText}"
              Text="{Binding WhatsNewLoadingText}"
              FontSize="16"
              VerticalAlignment="Center"/>
        </Grid>
        <TextBlock
            IsVisible="{Binding NoFilteredItems}"
            Text="{ext:Localize XAML_No_Items}"
            Margin="15"
            Foreground="{DynamicResource DisabledColor}"/>
        
        <ItemsRepeater ItemsSource="{Binding FilteredItems}" ElementPrepared="PrepareElement" VerticalCacheLength="20">
          <ItemsRepeater.ItemTemplate>
            <DataTemplate DataType="models:ModItem">
              <Grid Margin="8 12 12 0">
                <Grid.ContextMenu>
                  <ContextMenu IsEnabled="{Binding IsModContextMenuEnabled}">
                    <MenuItem 
                        IsEnabled="{Binding CanBePinned}" 
                        Header="{ext:Localize XAML_Pin}"
                        Command="{ReflectionBinding $parent[pages:ModListView].DataContext.PinMod}" 
                        CommandParameter="{Binding .}"
                        ToolTip.Tip="{ext:Localize XAML_PinMod_Explanation}" ToolTip.ShowDelay="0"/>
                    <MenuItem 
                        IsEnabled="{Binding CanBeRegisteredNotInModlinks}"
                        Header="{ext:Localize XAML_RegisterNotInModlinks}" 
                        Command="{ReflectionBinding $parent[pages:ModListView].DataContext.RegisterNotInModlinks}" 
                        CommandParameter="{Binding .}"
                        ToolTip.Tip="{ext:Localize XAML_RegisterNotInModlinks_Explanation}" ToolTip.ShowDelay="0"/>
                  </ContextMenu>
                </Grid.ContextMenu>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" MaxWidth="260" />
                  <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>

                <Expander Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Background="{DynamicResource RegionColor}">
                  <Expander.Header>
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />  <!-- enable (always visible, no need to reserve space for it) -->
                        <ColumnDefinition MaxWidth="150" /> <!-- update -->
                        <ColumnDefinition MaxWidth="105" /> <!-- install-->
                        <ColumnDefinition MaxWidth="40"/>   <!-- pin -->
                      </Grid.ColumnDefinitions>
                      <TextBlock Grid.Column="0"
                          TextWrapping="Wrap"
                          VerticalAlignment="Center"
                          Margin="0 0 20 0"
                          Name="ModName"
                          Text="{Binding Name}"/>

                      <Panel
                          VerticalAlignment="Center"
                          Grid.Column="1">
                        <ToggleSwitch
                            Margin="0 -3 0 0"
                            VerticalAlignment="Top"
                            CommandParameter="{Binding .}"
                            OnContent="{ext:Localize XAML_On}"
                            OffContent="{ext:Localize XAML_Off}"
                            Command="{ReflectionBinding $parent[pages:ModListView].DataContext.OnEnable}"
                            IsChecked="{Binding EnabledIsChecked}"
                            IsEnabled = "{Binding EnableButtonAccessible}"
                            VerticalContentAlignment="Center"
                            HorizontalAlignment="Right"
                                                />
                      </Panel>
                      <Panel
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center"
                          Grid.Column="2">
                          <SplitButton
                              CommandParameter="{Binding .}"
                              Background="#976526"
                              BorderBrush="#976526"
                              IsVisible="{Binding UpdateAvailable}"
                              IsEnabled="{Binding !InstallingButtonAccessible}"
                              Command="{ReflectionBinding $parent[pages:ModListView].DataContext.OnUpdate}"
                              VerticalAlignment="Top">
                              <StackPanel Orientation="Horizontal">
                                <PathIcon 
                                    Data="{StaticResource history_regular}" 
                                    Height="15" 
                                    Width="15" 
                                    VerticalAlignment="Center"
                                    Margin="0 0 5 0"/>
                                <TextBlock Text="{ext:Localize XAML_Update}"/>
                              </StackPanel>
                              <SplitButton.Flyout>
                                  <MenuFlyout>
                                        <MenuItem 
                                            Header="View release notes"
                                            Command="{Binding OpenReleaseNotes}"/>
                                  </MenuFlyout>
                              </SplitButton.Flyout>
                            </SplitButton>   
                        </Panel>
                        <Panel 
                            VerticalAlignment="Center"
                            Grid.Column="3">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Button
                                    Grid.Column="0"
                                    Padding="3"
                                    Margin="0 -3 0 0"
                                    CommandParameter="{Binding .}"
                                    MinWidth="115"
                                    IsEnabled="{Binding !InstallingButtonAccessible}"
                                    Command="{ReflectionBinding $parent[pages:ModListView].DataContext.OnInstall}"
                                    VerticalAlignment="Top"
                                    HorizontalAlignment="Stretch"
                                    HorizontalContentAlignment="Center">
                                    <StackPanel Orientation="Horizontal">
                                        <PathIcon 
                                            Data="{Binding InstallIcon}" 
                                            Height="15" 
                                            Width="15" 
                                            VerticalAlignment="Center"
                                            Margin="0 0 5 0"/>
                                        <TextBlock Text="{Binding InstallText}"/>
                                    </StackPanel>
                                </Button>

                                <Button Grid.Column="1"
                                    IsVisible="{Binding !Installed}"
                                    Padding="5"
                                    Margin="0 -3 0 0"
                                    VerticalAlignment="Stretch"
                                    HorizontalAlignment="Center"
                                    Command="{Binding LoadAvailableVersionsFromRepository}">
                                    <PathIcon Data="M 0 0 L 10 0 L 5 5 Z" Width="10" Height="5"/>
                                    <Button.Flyout>
                                        <MenuFlyout 
                                            ItemsSource="{Binding AvailableVersions}">
                                            <MenuFlyout.ItemTemplate>
                                                <DataTemplate DataType="models:ModItem">
                                                    <ScrollViewer MaxHeight="200">
                                                        <StackPanel>
                                                            <MenuItem 
                                                                Header="{Binding .}"
                                                                CommandParameter="{Binding .}"/>
                                                        </StackPanel>
                                                    </ScrollViewer>
                                                </DataTemplate>
                                            </MenuFlyout.ItemTemplate>
                                        </MenuFlyout>
                                    </Button.Flyout>
                                </Button>
                            </Grid>
                        </Panel>

                      <Button Grid.Column="4" 
                              Margin="0 -5 0 0"
                              VerticalAlignment="Center"
                              Background="Transparent"
                              BorderBrush="Transparent"
                              IsVisible="{Binding Pinned}"
                              ToolTip.Tip="{ext:Localize XAML_Unpin}" ToolTip.ShowDelay="0"
                              Command="{ReflectionBinding $parent[pages:ModListView].DataContext.PinMod}" 
                              CommandParameter="{Binding .}"
                              HorizontalAlignment="Right">
                        <PathIcon
                             Data="{StaticResource pin_regular}"
                             FontSize="20"
                             Margin="1 5 0 0"
                             VerticalAlignment="Center"
                             HorizontalAlignment="Center"/>
                      </Button>
                    </Grid>
                  </Expander.Header>

                    <Grid
                        RowDefinitions="Auto, *, Auto"
                        ColumnDefinitions="*,*"
                        Margin="12 0 12 10">

                        <md:MarkdownScrollViewer
                            Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"
                            Markdown="{Binding Description}" Margin="0 0 4 0" />

                        <StackPanel
                            Grid.Column="0" Grid.Row="1"
                            IsVisible="{Binding HasRepo}"
                            Margin="0,10,10,0">

                            <TextBlock Text="{ext:Localize XAML_Version}" FontWeight="Bold" Margin="0 0 0 0" />
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding VersionText}" />
                                <TextBlock
                                    Text="{Binding UpdateText}"
                                    IsVisible="{Binding UpdateAvailable}"
                                    Foreground="{DynamicResource Highlight}"
                                    Margin="4 0 0 0"
                                    FontWeight="Bold">
                                    <TextBlock.Resources>
                                        <SolidColorBrush x:Key="Highlight" Color="#f49107" />
                                    </TextBlock.Resources>
                                </TextBlock>
                            </StackPanel>
                            
                            <StackPanel IsVisible="{Binding HasDependencies}" Margin="0 10 0 0">
                                <TextBlock Text="{ext:Localize XAML_Dependencies}" FontWeight="Bold" />
                                <TextBlock Text="{Binding DependenciesDesc}" TextWrapping="Wrap" />
                            </StackPanel>

                        </StackPanel>
                        <StackPanel Grid.Column="1" Grid.Row="1" HorizontalAlignment="Center" Margin="10,0,0,0">
                            <StackPanel IsVisible="{Binding HasAuthors}" Margin="0 10 0 0">
                                <TextBlock Text="{ext:Localize XAML_Authors}" FontWeight="Bold" />
                                <TextBlock Text="{Binding AuthorsDesc}" TextWrapping="Wrap" />
                            </StackPanel>
                            <StackPanel IsVisible="{Binding HasIntegrations}" Margin="0 10 0 0">
                                <TextBlock Text="{ext:Localize XAML_Integrations}" FontWeight="Bold" />
                                <TextBlock Text="{Binding IntegrationsDesc}" TextWrapping="Wrap" />
                            </StackPanel>
                            <StackPanel IsVisible="{Binding HasTags}" Margin="0 10 0 0">
                                <TextBlock Text="{ext:Localize XAML_Tags}" FontWeight="Bold" />
                                <TextBlock Text="{Binding TagDesc}" TextWrapping="Wrap" />
                            </StackPanel>
                        </StackPanel>
                        <StackPanel
                            Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                            HorizontalAlignment="Left"
                            Orientation="Horizontal"
                            Margin="0 10 0 0">
                            <StackPanel.Styles>
                                <Style Selector="Button.Icon">
                                    <Setter Property="Width" Value="25" />
                                    <Setter Property="Height" Value="25" />
                                </Style>
                                <Style Selector="Button">
                                    <Setter Property="Margin" Value="0 0 10 0" />
                                </Style>
                            </StackPanel.Styles>
                            <Button Content="{ext:Localize ViewReadme}"
                                    Command="{Binding OpenReadme}"/>
                            <Button
                                Classes="Icon"
                                ToolTip.Tip="{ext:Localize XAML_Repository}" ToolTip.ShowDelay="0"
                                Command="{Binding OpenRepository}">
                                <Svg Path="../../Assets/github.svg" Width="20" Height="20"/>
                            </Button>
                            <Button
                                Classes="Icon"
                                ToolTip.Tip="{ext:Localize XAML_Share}" ToolTip.ShowDelay="0"
                                Command="{Binding Share}">
                                <PathIcon Data="{StaticResource share_android_regular}" />
                            </Button>
                            <Button
                                Classes="Icon"
                                ToolTip.Tip="{ext:Localize XAML_OpenFolder}" ToolTip.ShowDelay="0"
                                IsEnabled="{Binding Installed}"
                                Command="{ReflectionBinding $parent[pages:ModListView].DataContext.OpenFolder}"
                                CommandParameter="{Binding .}">
                                <PathIcon Data="{StaticResource folder_regular}" />
                            </Button>
                            <Button
                                ToolTip.Tip="{ext:Localize XAML_ResetMod}" ToolTip.ShowDelay="0"
                                IsEnabled="{Binding Installed}"
                                Command="{ReflectionBinding $parent[pages:ModListView].DataContext.ResetMod}"
                                CommandParameter="{Binding .}">
                                <PathIcon Data="{StaticResource history_regular}" Width="16" Height="16"/>
                            </Button>
                            <Button
                                Classes="Icon"
                                ToolTip.Tip="{ext:Localize XAML_EditSettings}" ToolTip.ShowDelay="0"
                                IsEnabled="{Binding HasSettings}"
                                Command="{Binding OpenSettingsFile}">
                                <PathIcon Data="{StaticResource edit_settings_regular}" />
                            </Button>
                            <Button
                                Classes="Icon"
                                ToolTip.Tip="{ext:Localize XAML_ReportBug}" ToolTip.ShowDelay="0"
                                Command="{Binding ReportBug}">
                                <PathIcon Data="{StaticResource bug_regular}" />
                            </Button>
                        </StackPanel>
                  </Grid>
                </Expander>
              </Grid>
            </DataTemplate>
          </ItemsRepeater.ItemTemplate>
        </ItemsRepeater>
      </StackPanel>
    </ScrollViewer>
  </DockPanel>
  </SplitView>
</views:View>
